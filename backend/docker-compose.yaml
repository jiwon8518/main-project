version: '3.3'

services:
  my_backend:
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - ./.env # .env의 위치
    volumes:
      - ./src:/my_backend/src
      # - ./.env:/myfolder/.env # .env의 위치
    ports:
      - 3000:3000

  my_database:
    platform: linux/x86_64
    image: mysql:latest
    environment:
      MYSQL_DATABASE: 'main_project'
      MYSQL_ROOT_PASSWORD: '1234'
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
      - --skip-character-set-client-handshake
    cap_add:
      - SYS_NICE
    ports:
      - 3306:3306

  my_redis:
    image: redis:latest
    ports:
      - 6379:6379

  # elasticsearch:
  #   image: elasticsearch:7.17.0
  #   environment:
  #     discovery.type: single-node
  #   ports:
  #     - 9200:9200

  # logstash:
  #   image: logstash:7.17.0
  #   volumes:
  #     - ./elk/logstash/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
  #     - ./elk/logstash/mysql-connector-java-8.0.28.jar:/usr/share/logstash/mysql-connector-java-8.0.28.jar
#
#
# version: '3.3'

# services:
#   my_backend:
#     build:
#       context: .
#       dockerfile: Dockerfile
#     ports:
#       - 3001:3001
#     volumes:
#       - ./index.js:/myfolder/index.js

#   my_database:
#     image: mysql:latest
#     environment:
#       MYSQL_DATABASE: 'myproject'
#       MYSQL_ROOT_PASSWORD: '1234'
#     command:
#       - --character-set-server=utf8mb4
#       - --collation-server=utf8mb4_unicode_ci
#       - --skip-character-set-client-handshake
#     cap_add:
#       - SYS_NICE
#     ports:
#       - 3306:3306
